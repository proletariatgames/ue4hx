/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;

/**
  PhysicsVolume: A bounding volume which affects actor physics.
  Each AActor is affected at any time by one PhysicsVolume.
**/
@:glueCppIncludes("GameFramework/PhysicsVolume.h")
@:uextern @:uclass extern class APhysicsVolume extends unreal.AVolume {
  
  /**
    By default, the origin of an AActor must be inside a PhysicsVolume for it to affect the actor. However if this flag is true, the other actor only has to touch the volume to be affected by it.
  **/
  @:uproperty public var bPhysicsOnContact : Bool;
  
  /**
    True if this volume contains a fluid like water
  **/
  @:uproperty public var bWaterVolume : Bool;
  
  /**
    This property controls the amount of friction applied by the volume as pawns using CharacterMovement move through it. The higher this value, the harder it will feel to move through
  **/
  @:uproperty public var FluidFriction : unreal.Float32;
  
  /**
    Determines which PhysicsVolume takes precedence if they overlap (higher number = higher priority).
  **/
  @:uproperty public var Priority : unreal.Int32;
  
  /**
    Terminal velocity of pawns using CharacterMovement when falling.
  **/
  @:uproperty public var TerminalVelocity : unreal.Float32;
  
}
