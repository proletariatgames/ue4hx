/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;

/**
  ModuleType
     Indicates the kind of emitter the module can be applied to.
     ie, EPMT_Beam - only applies to beam emitters.
  
     The TypeData field is present to speed up finding the TypeData module.
**/
@:glueCppIncludes("Classes/Particles/ParticleModule.h")
@:uname("EModuleType")
@:uextern @:uenum extern enum EModuleType {
  
  /**
    General - all emitter types can use it
    @DisplayName General
  **/
  @DisplayName("General")
  EPMT_General;
  
  /**
    TypeData - TypeData modules
    @DisplayName Type Data
  **/
  @DisplayName("Type Data")
  EPMT_TypeData;
  
  /**
    Beam - only applied to beam emitters
    @DisplayName Beam
  **/
  @DisplayName("Beam")
  EPMT_Beam;
  
  /**
    Trail - only applied to trail emitters
    @DisplayName Trail
  **/
  @DisplayName("Trail")
  EPMT_Trail;
  
  /**
    Spawn - all emitter types REQUIRE it
    @DisplayName Spawn
  **/
  @DisplayName("Spawn")
  EPMT_Spawn;
  
  /**
    Required - all emitter types REQUIRE it
    @DisplayName Required
  **/
  @DisplayName("Required")
  EPMT_Required;
  
  /**
    Event - event related modules
    @DisplayName Event
  **/
  @DisplayName("Event")
  EPMT_Event;
  
  /**
    Light related modules
    @DisplayName Light
  **/
  @DisplayName("Light")
  EPMT_Light;
  
  /**
    SubUV related modules
    @DisplayName SubUV
  **/
  @DisplayName("SubUV")
  EPMT_SubUV;
  EPMT_MAX;
  
}
