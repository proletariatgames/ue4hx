/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;

/**
  LODActor is an instance of an autogenerated StaticMesh Actors by Hierarchical LOD System
  This is essentially just StaticMeshActor that you can't move or edit, but it contains multiple actors reference
  
  @see https://docs.unrealengine.com/latest/INT/Engine/Actors/LODActor/
  @see UStaticMesh
**/
@:glueCppIncludes("Engine/LODActor.h")
@:uextern @:uclass extern class ALODActor extends unreal.AActor {
  #if WITH_EDITORONLY_DATA
  
  /**
    Override screen size value used in mesh reduction, when creating the proxy mesh
  **/
  @:uproperty public var ScreenSize : unreal.Int32;
  
  /**
    Flag whether or not to use the override ScreenSize when creating the proxy mesh
  **/
  @:uproperty public var bOverrideScreenSize : Bool;
  
  /**
    Override transition screen size value, determines the screen size at which the proxy is visible
    The screen size is based around the projected diameter of the bounding
    sphere of the model. i.e. 0.5 means half the screen's maximum dimension.
  **/
  @:uproperty public var TransitionScreenSize : unreal.Float32;
  
  /**
    Flag whether or not to use the override TransitionScreenSize for this proxy mesh
  **/
  @:uproperty public var bOverrideTransitionScreenSize : Bool;
  
  /**
    Override Material Settings, used when creating the proxy mesh
  **/
  @:uproperty public var MaterialSettings : unreal.FMaterialProxySettings;
  
  /**
    Flag whether or not to use the override MaterialSettings when creating the proxy mesh
  **/
  @:uproperty public var bOverrideMaterialMergeSettings : Bool;
  
  /**
    Cached number of triangles contained in the SubActors
  **/
  @:uproperty public var NumTrianglesInMergedMesh : unreal.FakeUInt32;
  
  /**
    Cached number of triangles contained in the SubActors
  **/
  @:uproperty public var NumTrianglesInSubActors : unreal.FakeUInt32;
  #end // WITH_EDITORONLY_DATA
  @:uproperty public var CachedNumHLODLevels : unreal.UInt8;
  
  /**
    The hierarchy level of this actor; the first tier of HLOD is level 1, the second tier is level 2 and so on.
  **/
  @:uproperty public var LODLevel : unreal.Int32;
  @:uproperty public var SubActors : unreal.TArray<unreal.AActor>;
  
}
