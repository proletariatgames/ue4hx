/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;

/**
  Enumerates types of fully loaded packages.
**/
@:glueCppIncludes("Classes/Engine/Engine.h")
@:uname("EFullyLoadPackageType")
@:uextern @:uenum extern enum EFullyLoadPackageType {
  
  /**
    Load the packages when the map in Tag is loaded.
  **/
  FULLYLOAD_Map;
  
  /**
    Load the packages before the game class in Tag is loaded. The Game name MUST be specified in the URL (game=Package.GameName). Useful for loading packages needed to load the game type (a DLC game type, for instance).
  **/
  FULLYLOAD_Game_PreLoadClass;
  
  /**
    Load the packages after the game class in Tag is loaded. Will work no matter how game is specified in UWorld::SetGameMode. Useful for modifying shipping gametypes by loading more packages (mutators, for instance).
  **/
  FULLYLOAD_Game_PostLoadClass;
  
  /**
    Fully load the package as long as the DLC is loaded.
  **/
  FULLYLOAD_Always;
  
  /**
    Load the package for a mutator that is active.
  **/
  FULLYLOAD_Mutator;
  FULLYLOAD_MAX;
  
}
