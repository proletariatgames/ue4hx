/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;

/**
  WARNING: This type was defined as MinimalAPI on its declaration. Because of that, its properties/methods are inaccessible
  
  Delegates
**/
@:glueCppIncludes("Engine/NetConnection.h")
@:uextern @:uclass extern class UNetConnection extends unreal.UPlayer {
  
  /**
    Internal.
  **/
  @:uproperty public var LastReceiveTime : unreal.Float64;
  
  /**
    Net id of remote player on this connection. Only valid on client connections (server side).
  **/
  @:uproperty public var PlayerId : unreal.FUniqueNetIdRepl;
  
  /**
    Maximum packet size.
  **/
  @:uproperty public var InternalAck : Bool;
  @:uproperty public var MaxPacket : unreal.Int32;
  
  /**
    Reference to controlling actor (usually PlayerController)
  **/
  @:uproperty public var OwningActor : unreal.AActor;
  
  /**
    The actor that is currently being viewed/controlled by the owning controller
  **/
  @:uproperty public var ViewTarget : unreal.AActor;
  
  /**
    This actor is bNetTemporary, which means it should never be replicated after it's initial packet is complete
  **/
  @:uproperty public var SentTemporaries : unreal.TArray<unreal.AActor>;
  
  /**
    @todo document
  **/
  @:uproperty public var OpenChannels : unreal.TArray<unreal.UChannel>;
  
  /**
    Package map between local and remote. (negotiates net serialization)
  **/
  @:uproperty public var PackageMap : unreal.UPackageMap;
  
  /**
    The class name for the PackageMap to be loaded
  **/
  @:uproperty public var PackageMapClass : unreal.TSubclassOf<unreal.UPackageMap>;
  
  /**
    Owning net driver
  **/
  @:uproperty public var Driver : unreal.UNetDriver;
  
  /**
    child connections for secondary viewports
  **/
  @:uproperty public var Children : unreal.TArray<unreal.UChildConnection>;
  
}
