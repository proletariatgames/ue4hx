/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;

@:glueCppIncludes("Classes/Sound/SoundConcurrency.h")
@:uname("EMaxConcurrentResolutionRule.Type")
@:uextern @:uenum extern enum EMaxConcurrentResolutionRule {
  
  /**
    When Max Concurrent sounds are active do not start a new sound.
  **/
  PreventNew;
  
  /**
    When Max Concurrent sounds are active stop the oldest and start a new one.
  **/
  StopOldest;
  
  /**
    When Max Concurrent sounds are active stop the furthest sound.  If all sounds are the same distance then do not start a new sound.
  **/
  StopFarthestThenPreventNew;
  
  /**
    When Max Concurrent sounds are active stop the furthest sound.  If all sounds are the same distance then stop the oldest.
  **/
  StopFarthestThenOldest;
  
  /**
    Stop the lowest priority sound in the group. If all sounds are the same priority, then it will stop the oldest sound in the group.
  **/
  StopLowestPriority;
  
  /**
    Stop the sound that is quietest in the group.
  **/
  StopQuietest;
  
  /**
    Stop the lowest priority sound in the group. If all sounds are the same priority, then it won't play a new sound.
  **/
  StopLowestPriorityThenPreventNew;
  
}
