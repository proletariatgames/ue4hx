/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;

/**
  FloatingPawnMovement is a movement component that provides simple movement for any Pawn class.
  Limits on speed and acceleration are provided, while gravity is not implemented.
  
  Normally the root component of the owning actor is moved, however another component may be selected (see SetUpdatedComponent()).
  During swept (non-teleporting) movement only collision of UpdatedComponent is considered, attached components will teleport to the end location ignoring collision.
**/
@:glueCppIncludes("GameFramework/FloatingPawnMovement.h")
@:uextern @:uclass extern class UFloatingPawnMovement extends unreal.UPawnMovementComponent {
  
  /**
    Setting affecting extra force applied when changing direction, making turns have less drift and become more responsive.
    Velocity magnitude is not allowed to increase, that only happens due to normal acceleration. It may decrease with large direction changes.
    Larger values apply extra force to reach the target direction more quickly, while a zero value disables any extra turn force.
  **/
  @:uproperty public var TurningBoost : unreal.Float32;
  
  /**
    Deceleration applied when there is no input (rate of change of velocity)
  **/
  @:uproperty public var Deceleration : unreal.Float32;
  
  /**
    Acceleration applied by input (rate of change of velocity)
  **/
  @:uproperty public var Acceleration : unreal.Float32;
  
  /**
    Maximum velocity magnitude allowed for the controlled Pawn.
  **/
  @:uproperty public var MaxSpeed : unreal.Float32;
  
}
