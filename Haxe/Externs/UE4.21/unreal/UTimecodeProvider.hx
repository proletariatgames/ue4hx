/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;

/**
  A class responsible of fetching a timecode from a source.
  Note, FApp::GetTimecode and FApp::GetTimecodeFramerate should be used to retrieve
  the current system Timecode and Framerate.
**/
@:glueCppIncludes("Engine/TimecodeProvider.h")
@:uextern @:uclass extern class UTimecodeProvider extends unreal.UObject {
  
  /**
    Return the Timecode at that moment. It may not be in sync with the current frame.
    Only valid when GetSynchronizationState() is Synchronized.
  **/
  @:ufunction(BlueprintCallable) @:thisConst public function GetTimecode() : unreal.FTimecode;
  
  /**
    Return the frame rate.
    Depending on the implementation, it may or may not be valid only when GetSynchronizationState() is Synchronized.
  **/
  @:ufunction(BlueprintCallable) @:thisConst public function GetFrameRate() : unreal.FFrameRate;
  
  /**
    The state of the TimecodeProvider and if it's currently synchronized and the Timecode and FrameRate are valid.
  **/
  @:ufunction(BlueprintCallable) @:thisConst public function GetSynchronizationState() : unreal.ETimecodeProviderSynchronizationState;
  
}
