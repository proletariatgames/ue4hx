/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;

/**
  WARNING: This type was defined as MinimalAPI on its declaration. Because of that, its properties/methods are inaccessible
  
  
**/
@:glueCppIncludes("VectorField/VectorFieldAnimated.h")
@:uextern @:uclass extern class UVectorFieldAnimated extends unreal.UVectorField {
  
  /**
    The maximum magnitude of noise vectors to apply.
  **/
  @:uproperty public var NoiseMax : unreal.Float32;
  
  /**
    Scale to apply to vectors in the noise field.
  **/
  @:uproperty public var NoiseScale : unreal.Float32;
  
  /**
    A static vector field used to add noise.
  **/
  @:uproperty public var NoiseField : unreal.UVectorFieldStatic;
  
  /**
    Whether or not the simulation should loop.
  **/
  @:uproperty public var bLoop : Bool;
  
  /**
    The rate at which to interpolate between frames.
  **/
  @:uproperty public var FramesPerSecond : unreal.Float32;
  
  /**
    The number of frames in the atlas.
  **/
  @:uproperty public var FrameCount : unreal.Int32;
  
  /**
    The number of vertical subimages in the texture atlas.
  **/
  @:uproperty public var SubImagesY : unreal.Int32;
  
  /**
    The number of horizontal subimages in the texture atlas.
  **/
  @:uproperty public var SubImagesX : unreal.Int32;
  
  /**
    The size of the volume. Valid sizes: 16, 32, 64.
  **/
  @:uproperty public var VolumeSizeZ : unreal.Int32;
  
  /**
    The size of the volume. Valid sizes: 16, 32, 64.
  **/
  @:uproperty public var VolumeSizeY : unreal.Int32;
  
  /**
    The size of the volume. Valid sizes: 16, 32, 64.
  **/
  @:uproperty public var VolumeSizeX : unreal.Int32;
  
  /**
    The operation used to construct the vector field.
  **/
  @:uproperty public var ConstructionOp : unreal.EVectorFieldConstructionOp;
  
  /**
    The texture from which to create the vector field.
  **/
  @:uproperty public var Texture : unreal.UTexture2D;
  
}
