/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.targetdeviceservices;

/**
  Implements a message for notifying a target device proxy that launching an application has finished.
  
  @see FTargetDeviceServiceLaunchApp
**/
@:umodule("TargetDeviceServices")
@:glueCppIncludes("Public/TargetDeviceServiceMessages.h")
@:noCopy @:noEquals @:uextern @:ustruct extern class FTargetDeviceServiceLaunchFinished {
  
  /**
    Holds a flag indicating whether the application was launched successfully.
  **/
  @:uproperty public var Succeeded : Bool;
  
  /**
    Holds the process identifier for the launched application.
  **/
  @:uproperty public var ProcessId : unreal.Int32;
  
  /**
    Holds the identifier of the launched application.
    
    The semantics of this identifier are target platform specific. In some cases it may be
    a GUID, in other cases it may be the path to the application or some other means of
    identifying the application. Application identifiers are returned from target device
    services as result of successful deployment transactions.
  **/
  @:uproperty public var AppID : unreal.FString;
  
}
