/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;

/**
  A box generally used for simple collision. Bounds are rendered as lines in the editor.
**/
@:glueCppIncludes("Components/BoxComponent.h")
@:uextern @:uclass extern class UBoxComponent extends unreal.UShapeComponent {
  
  /**
    Used to control the line thickness when rendering
  **/
  @:uproperty private var LineThickness : unreal.Float32;
  
  /**
    The extents (radii dimensions) of the box *
  **/
  @:uproperty private var BoxExtent : unreal.FVector;
  
  /**
    Change the box extent size. This is the unscaled size, before component scale is applied.
    @param       InBoxExtent: new extent (radius) for the box.
    @param       bUpdateOverlaps: if true and this shape is registered and collides, updates touching array for owner actor.
  **/
  @:ufunction(BlueprintCallable) @:final public function SetBoxExtent(InBoxExtent : unreal.FVector, bUpdateOverlaps : Bool = true) : Void;
  
  /**
    @return the box extent, scaled by the component scale.
  **/
  @:ufunction(BlueprintCallable) @:thisConst @:final public function GetScaledBoxExtent() : unreal.FVector;
  
  /**
    @return the box extent, ignoring component scale.
  **/
  @:ufunction(BlueprintCallable) @:thisConst @:final public function GetUnscaledBoxExtent() : unreal.FVector;
  
}
