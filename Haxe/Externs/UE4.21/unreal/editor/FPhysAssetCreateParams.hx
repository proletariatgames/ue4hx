/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.editor;

/**
  Parameters for PhysicsAsset creation
**/
@:umodule("UnrealEd")
@:glueCppIncludes("Public/PhysicsAssetUtils.h")
@:noCopy @:noEquals @:uextern @:ustruct extern class FPhysAssetCreateParams {
  
  /**
    When creating convex hulls, the maximum verts that should be created
  **/
  @:uproperty public var MaxHullVerts : unreal.Int32;
  
  /**
    When creating multiple convex hulls, the maximum number that will be created.
  **/
  @:uproperty public var HullCount : unreal.Int32;
  
  /**
    The type of angular constraint to create between bodies
  **/
  @:uproperty public var AngularConstraintMode : unreal.EAngularConstraintMotion;
  
  /**
    Forces creation of a body for each bone
  **/
  @:uproperty public var bBodyForAll : Bool;
  
  /**
    Whether to skip small bones entirely (rather than merge them with adjacent bones)
  **/
  @:uproperty public var bWalkPastSmall : Bool;
  
  /**
    Whether to create constraints between adjacent created bodies
  **/
  @:uproperty public var bCreateConstraints : Bool;
  
  /**
    Whether to automatically orient the created bodies to their corresponding bones
  **/
  @:uproperty public var bAutoOrientToBone : Bool;
  
  /**
    How vertices are mapped to bones when approximating them with bodies
  **/
  @:uproperty public var VertWeight : unreal.editor.EPhysAssetFitVertWeight;
  
  /**
    The geometry type that should be used when creating bodies
  **/
  @:uproperty public var GeomType : unreal.editor.EPhysAssetFitGeomType;
  
  /**
    Bones that are smaller than this value will be merged together for body creation
  **/
  @:uproperty public var MinWeldSize : unreal.Float32;
  
  /**
    Bones that are shorter than this value will be ignored for body creation
  **/
  @:uproperty public var MinBoneSize : unreal.Float32;
  
}
