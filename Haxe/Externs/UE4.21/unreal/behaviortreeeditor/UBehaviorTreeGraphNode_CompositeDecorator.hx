/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.behaviortreeeditor;

/**
  WARNING: This type was not defined as DLL export on its declaration. Because of that, some of its methods are inaccessible
  
  
**/
@:umodule("BehaviorTreeEditor")
@:glueCppIncludes("BehaviorTreeGraphNode_CompositeDecorator.h")
@:noClass @:uextern @:uclass extern class UBehaviorTreeGraphNode_CompositeDecorator extends unreal.behaviortreeeditor.UBehaviorTreeGraphNode {
  @:uproperty private var CachedDescription : unreal.FString;
  @:uproperty private var ParentNodeInstance : unreal.aimodule.UBTCompositeNode;
  
  /**
    updated with internal graph changes, set when decorators inside can abort flow
  **/
  @:uproperty public var bCanAbortFlow : Bool;
  
  /**
    if set, all logic operations will be shown in description
  **/
  @:uproperty public var bShowOperations : Bool;
  @:uproperty public var CompositeName : unreal.FString;
  
  /**
    The logic graph for this decorator (returning a boolean)
  **/
  @:uproperty public var BoundGraph : unreal.UEdGraph;
  
}
