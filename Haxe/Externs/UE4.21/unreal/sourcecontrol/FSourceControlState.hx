/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.sourcecontrol;

/**
  Snapshot of source control state of for a file
  @see        USourceControlHelpers::QueryFileState()
**/
@:umodule("SourceControl")
@:glueCppIncludes("Public/SourceControlHelpers.h")
@:noCopy @:noEquals @:uextern @:ustruct extern class FSourceControlState {
  
  /**
    Get name of other user who this file already checked out or "" if no other user has it checked out
  **/
  @:uproperty public var CheckedOutOther : unreal.FString;
  
  /**
    Determine if this file is checked out by someone else
  **/
  @:uproperty public var bIsCheckedOutOther : Bool;
  
  /**
    Determine if this file can be reverted, i.e. discard changes and the file will no longer be checked-out.
  **/
  @:uproperty public var bCanRevert : Bool;
  
  /**
    Determine if this file is in a conflicted state
  **/
  @:uproperty public var bIsConflicted : Bool;
  
  /**
    Determine if this file can be added to source control (i.e. is part of the directory
    structure currently under source control)
  **/
  @:uproperty public var bCanAdd : Bool;
  
  /**
    Determine if this file is modified compared to the version in source control.
  **/
  @:uproperty public var bIsModified : Bool;
  
  /**
    Determine if source control allows this file to be deleted.
  **/
  @:uproperty public var bCanDelete : Bool;
  
  /**
    Determine if source control allows this file to be edited
  **/
  @:uproperty public var bCanEdit : Bool;
  
  /**
    Determine if this file is ignored by source control
  **/
  @:uproperty public var bIsIgnored : Bool;
  
  /**
    Determine if this file is marked for delete
  **/
  @:uproperty public var bIsDeleted : Bool;
  
  /**
    Determine if this file is marked for add
    @note        if already checked in then not considered mid add
  **/
  @:uproperty public var bIsAdded : Bool;
  
  /**
    Determine if this file is under source control
  **/
  @:uproperty public var bIsSourceControlled : Bool;
  
  /**
    Determine if this file is up-to-date with the version in source control
  **/
  @:uproperty public var bIsCurrent : Bool;
  
  /**
    Determine if this file is checked out
  **/
  @:uproperty public var bIsCheckedOut : Bool;
  
  /**
    Determine if this file can be checked out
  **/
  @:uproperty public var bCanCheckOut : Bool;
  
  /**
    Determine if this file can be checked in.
  **/
  @:uproperty public var bCanCheckIn : Bool;
  
  /**
    Determine if we know anything about the source control state of this file
  **/
  @:uproperty public var bIsUnknown : Bool;
  
  /**
    Indicates whether this source control state has valid information (true) or not (false)
  **/
  @:uproperty public var bIsValid : Bool;
  
  /**
    Get the local filename that this state represents
  **/
  @:uproperty public var Filename : unreal.FString;
  
}
