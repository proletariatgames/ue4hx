/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;

@:glueCppIncludes("Sound/SoundBase.h")
@:uextern @:uclass extern class USoundBase extends unreal.UObject {
  
  /**
    This sound will send its audio output to this list of buses if there are bus instances playing before source effects are processed.
  **/
  @:uproperty public var PreEffectBusSends : unreal.TArray<unreal.FSoundSourceBusSendInfo>;
  
  /**
    This sound will send its audio output to this list of buses if there are bus instances playing after source effects are processed.
  **/
  @:uproperty public var BusSends : unreal.TArray<unreal.FSoundSourceBusSendInfo>;
  
  /**
    The source effect chain to use for this sound.
  **/
  @:uproperty public var SourceEffectChain : unreal.USoundEffectSourcePresetChain;
  
  /**
    An array of submix sends. Audio from this sound will send a portion of its audio to these effects.
  **/
  @:uproperty public var SoundSubmixSends : unreal.TArray<unreal.FSoundSubmixSendInfo>;
  
  /**
    Sound submix this sound belongs to.
    Audio will play here and traverse through the submix graph.
    A null entry will make the sound obey the default master effects graph.
  **/
  @:uproperty public var SoundSubmixObject : unreal.USoundSubmix;
  
  /**
    Attenuation settings package for the sound
  **/
  @:uproperty public var AttenuationSettings : unreal.USoundAttenuation;
  
  /**
    Sound priority (higher value is higher priority) used for concurrency resolution. This priority value is weighted against the final volume of the sound.
  **/
  @:uproperty public var Priority : unreal.Float32;
  
  /**
    Total number of samples (in the thousands). Useful as a metric to analyze the relative size of a given sound asset in content browser.
  **/
  @:uproperty public var TotalSamples : unreal.Float32;
  
  /**
    The max distance of the asset, as determined by attenuation settings.
  **/
  @:uproperty public var MaxDistance : unreal.Float32;
  
  /**
    Duration of sound in seconds.
  **/
  @:uproperty public var Duration : unreal.Float32;
  #if WITH_EDITORONLY_DATA
  
  /**
    Maximum number of times this sound can be played concurrently.
  **/
  @:deprecated @:uproperty public var MaxConcurrentPlayCount_DEPRECATED : unreal.Int32;
  #end // WITH_EDITORONLY_DATA
  
  /**
    If Override Concurrency is true, concurrency settings to use.
  **/
  @:uproperty public var ConcurrencyOverrides : unreal.FSoundConcurrencySettings;
  
  /**
    If Override Concurrency is false, the sound concurrency settings to use for this sound.
  **/
  @:uproperty public var SoundConcurrencySettings : unreal.USoundConcurrency;
  #if WITH_EDITORONLY_DATA
  @:deprecated @:uproperty public var MaxConcurrentResolutionRule_DEPRECATED : unreal.EMaxConcurrentResolutionRule;
  #end // WITH_EDITORONLY_DATA
  
  /**
    Allows this sound to bypass volume-weighting for the max channel resolution.
  **/
  @:uproperty public var bBypassVolumeScaleForPriority : Bool;
  
  /**
    Whether a sound has virtualize when silent enabled (i.e. for a sound cue, if any sound wave player has it enabled).
  **/
  @:uproperty public var bHasVirtualizeWhenSilent : Bool;
  
  /**
    Whether or not this sound has a concatenator node. If it does, we have to allow the sound to persist even though it may not have generate audible audio in a given audio thread frame.
  **/
  @:uproperty public var bHasConcatenatorNode : Bool;
  
  /**
    Whether or not to only send this audio's output to a bus. If true, will not be this sound won't be audible except through bus sends.
  **/
  @:uproperty public var bHasDelayNode : Bool;
  @:deprecated @:uproperty public var bIgnoreFocus_DEPRECATED : Bool;
  
  /**
    Whether or not to only send this audio's output to a bus. If true, will not be this sound won't be audible except through bus sends.
  **/
  @:uproperty public var bOutputToBusOnly : Bool;
  
  /**
    Whether or not to override the sound concurrency object with local concurrency settings.
  **/
  @:uproperty public var bOverrideConcurrency : Bool;
  
  /**
    When "stat sounds -debug" has been specified, draw this sound's attenuation shape when the sound is audible. For debugging purpose only.
  **/
  @:uproperty public var bDebug : Bool;
  
  /**
    Sound class this sound belongs to
  **/
  @:uproperty private var SoundClassObject : unreal.USoundClass;
  
}
