/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.assetregistry;

/**
  A struct to serve as a filter for Asset Registry queries. Each component element is processed as an 'OR' operation while all the components are processed together as an 'AND' operation.
**/
@:umodule("AssetRegistry")
@:glueCppIncludes("Public/ARFilter.h")
@:noCopy @:noEquals @:uextern @:ustruct extern class FARFilter {
  
  /**
    If true, only on-disk assets will be returned. Be warned that this is rarely what you want and should only be used for performance reasons
  **/
  @:uproperty public var bIncludeOnlyOnDiskAssets : Bool;
  
  /**
    If true, subclasses of ClassNames will also be included and RecursiveClassesExclusionSet will be excluded.
  **/
  @:uproperty public var bRecursiveClasses : Bool;
  
  /**
    If true, PackagePath components will be recursive
  **/
  @:uproperty public var bRecursivePaths : Bool;
  
  /**
    The filter component for class names. Instances of the specified classes, but not subclasses (by default), will be included. Derived classes will be included only if bRecursiveClasses is true.
  **/
  @:uproperty public var ClassNames : unreal.TArray<unreal.FName>;
  
  /**
    The filter component containing specific object paths
  **/
  @:uproperty public var ObjectPaths : unreal.TArray<unreal.FName>;
  
  /**
    The filter component for package paths
  **/
  @:uproperty public var PackagePaths : unreal.TArray<unreal.FName>;
  
  /**
    The filter component for package names
  **/
  @:uproperty public var PackageNames : unreal.TArray<unreal.FName>;
  
}
