/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;

/**
  Sequence player node
**/
@:glueCppIncludes("Classes/Animation/AnimNode_SequencePlayer.h")
@:uextern @:ustruct extern class FAnimNode_SequencePlayer extends unreal.FAnimNode_AssetPlayerBase {
  
  /**
    The start up position, it only applies when reinitialized
    if you loop, it will still start from 0.f after finishing the round
  **/
  @:uproperty public var StartPosition : unreal.Float32;
  
  /**
    Additional scaling, offsetting and clamping of PlayRate input.
    Performed after PlayRateBasis.
  **/
  @:uproperty public var PlayRateScaleBiasClamp : unreal.FInputScaleBiasClamp;
  
  /**
    The play rate multiplier. Can be negative, which will cause the animation to play in reverse.
  **/
  @:uproperty public var PlayRate : unreal.Float32;
  
  /**
    The Basis in which the PlayRate is expressed in. This is used to rescale PlayRate inputs.
    For example a Basis of 100 means that the PlayRate input will be divided by 100.
  **/
  @:uproperty public var PlayRateBasis : unreal.Float32;
  
  /**
    Should the animation continue looping when it reaches the end?
  **/
  @:uproperty public var bLoopAnimation : Bool;
  
  /**
    The animation sequence asset to play
  **/
  @:uproperty public var Sequence : unreal.UAnimSequenceBase;
  
}
