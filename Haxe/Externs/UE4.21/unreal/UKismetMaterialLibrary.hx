/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;

/**
  WARNING: This type was defined as MinimalAPI on its declaration. Because of that, its properties/methods are inaccessible
  
  
**/
@:glueCppIncludes("Kismet/KismetMaterialLibrary.h")
@:uextern @:uclass extern class UKismetMaterialLibrary extends unreal.UBlueprintFunctionLibrary {
  
  /**
    Sets a scalar parameter value on the material collection instance. Logs if ParameterName is invalid.
  **/
  @:ufunction(BlueprintCallable) static public function SetScalarParameterValue(WorldContextObject : unreal.UObject, Collection : unreal.UMaterialParameterCollection, ParameterName : unreal.FName, ParameterValue : unreal.Float32) : Void;
  
  /**
    Sets a vector parameter value on the material collection instance. Logs if ParameterName is invalid.
  **/
  @:ufunction(BlueprintCallable) static public function SetVectorParameterValue(WorldContextObject : unreal.UObject, Collection : unreal.UMaterialParameterCollection, ParameterName : unreal.FName, ParameterValue : unreal.Const<unreal.PRef<unreal.FLinearColor>>) : Void;
  
  /**
    Gets a scalar parameter value from the material collection instance. Logs if ParameterName is invalid.
  **/
  @:ufunction(BlueprintCallable) static public function GetScalarParameterValue(WorldContextObject : unreal.UObject, Collection : unreal.UMaterialParameterCollection, ParameterName : unreal.FName) : unreal.Float32;
  
  /**
    Gets a vector parameter value from the material collection instance. Logs if ParameterName is invalid.
  **/
  @:ufunction(BlueprintCallable) static public function GetVectorParameterValue(WorldContextObject : unreal.UObject, Collection : unreal.UMaterialParameterCollection, ParameterName : unreal.FName) : unreal.FLinearColor;
  
  /**
    Creates a Dynamic Material Instance which you can modify during gameplay.
  **/
  @:ufunction(BlueprintCallable) static public function CreateDynamicMaterialInstance(WorldContextObject : unreal.UObject, Parent : unreal.UMaterialInterface, @:opt("None") OptionalName : unreal.FName) : unreal.UMaterialInstanceDynamic;
  
}
