/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;

/**
  WARNING: This type was defined as MinimalAPI on its declaration. Because of that, its properties/methods are inaccessible
  
  PhysicsAsset contains a set of rigid bodies and constraints that make up a single ragdoll.
  The asset is not limited to human ragdolls, and can be used for any physical simulation using bodies and constraints.
  A SkeletalMesh has a single PhysicsAsset, which allows for easily turning ragdoll physics on or off for many SkeletalMeshComponents
  The asset can be configured inside the Physics Asset Editor.
  
  @see https://docs.unrealengine.com/latest/INT/Engine/Physics/PhAT/Reference/index.html
  @see USkeletalMesh
**/
@:glueCppIncludes("PhysicsEngine/PhysicsAsset.h")
@:uextern @:uclass extern class UPhysicsAsset extends unreal.UObject implements unreal.IInterface_PreviewMeshProvider {
  
  /**
    Information for thumbnail rendering
  **/
  @:uproperty public var ThumbnailInfo : unreal.UThumbnailInfo;
  
  /**
    If true, we skip instancing bodies for this PhysicsAsset on dedicated servers
  **/
  @:uproperty public var bNotForDedicatedServer : Bool;
  
  /**
    If true, bodies of the physics asset will be put into the asynchronous physics scene. If false, they will be put into the synchronous physics scene.
  **/
  @:uproperty public var bUseAsyncScene : Bool;
  
  /**
    Array of RB_ConstraintSetup objects.
    Stores information about a joint between two bodies, such as position relative to each body, joint limits etc.
  **/
  @:uproperty public var ConstraintSetup : unreal.TArray<unreal.UPhysicsConstraintTemplate>;
  
  /**
    Array of SkeletalBodySetup objects. Stores information about collision shape etc. for each body.
    Does not include body position - those are taken from mesh.
  **/
  @:uproperty public var SkeletalBodySetups : unreal.TArray<unreal.USkeletalBodySetup>;
  
  /**
    Index of bodies that are marked bConsiderForBounds
  **/
  @:uproperty public var BoundsBodies : unreal.TArray<unreal.Int32>;
  #if WITH_EDITORONLY_DATA
  @:uproperty public var CurrentConstraintProfileName : unreal.FName;
  @:uproperty public var CurrentPhysicalAnimationProfileName : unreal.FName;
  @:uproperty public var ConstraintProfiles : unreal.TArray<unreal.FName>;
  @:uproperty public var PhysicalAnimationProfiles : unreal.TArray<unreal.FName>;
  
  /**
    Default skeletal mesh to use when previewing this PhysicsAsset etc.
    Is the one that was used as the basis for creating this Asset.
  **/
  @:deprecated @:uproperty public var DefaultSkelMesh_DEPRECATED : unreal.USkeletalMesh;
  #end // WITH_EDITORONLY_DATA
  // Interface_PreviewMeshProvider interface implementation
  
}
