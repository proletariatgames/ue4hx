/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.aimodule;

/**
  Is At Location decorator node.
  A decorator node that checks if AI controlled pawn is at given location.
**/
@:umodule("AIModule")
@:glueCppIncludes("BehaviorTree/Decorators/BTDecorator_IsAtLocation.h")
@:uextern @:uclass extern class UBTDecorator_IsAtLocation extends unreal.aimodule.UBTDecorator_BlackboardBase {
  
  /**
    If true the result will be consistent with tests done while following paths.
        Set to false to use geometric distance as configured with DistanceType
  **/
  @:uproperty public var bPathFindingBasedTest : Bool;
  
  /**
    if moving to an actor and this actor is a nav agent, then we will move to their nav agent location
  **/
  @:uproperty public var bUseNavAgentGoalLocation : Bool;
  @:uproperty public var bUseParametrizedRadius : Bool;
  @:uproperty public var GeometricDistanceType : unreal.aimodule.FAIDistanceType;
  @:uproperty public var ParametrizedAcceptableRadius : unreal.aimodule.FAIDataProviderFloatValue;
  
  /**
    distance threshold to accept as being at location
  **/
  @:uproperty public var AcceptableRadius : unreal.Float32;
  
}
