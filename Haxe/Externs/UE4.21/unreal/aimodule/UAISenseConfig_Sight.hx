/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.aimodule;

@:umodule("AIModule")
@:glueCppIncludes("Perception/AISenseConfig_Sight.h")
@:uextern @:uclass extern class UAISenseConfig_Sight extends unreal.aimodule.UAISenseConfig {
  
  /**
    If not an InvalidRange (which is the default), we will always be able to see the target that has already been seen if they are within this range of their last seen location.
  **/
  @:uproperty public var AutoSuccessRangeFromLastSeenLocation : unreal.Float32;
  @:uproperty public var DetectionByAffiliation : unreal.aimodule.FAISenseAffiliationFilter;
  
  /**
    How far to the side AI can see, in degrees. Use SetPeripheralVisionAngle to change the value at runtime.
        The value represents the angle measured in relation to the forward vector, not the whole range.
  **/
  @:uproperty public var PeripheralVisionAngleDegrees : unreal.Float32;
  
  /**
    Maximum sight distance to see target that has been already seen.
  **/
  @:uproperty public var LoseSightRadius : unreal.Float32;
  
  /**
    Maximum sight distance to notice a target.
  **/
  @:uproperty public var SightRadius : unreal.Float32;
  @:uproperty public var Implementation : unreal.TSubclassOf<unreal.aimodule.UAISense_Sight>;
  
}
