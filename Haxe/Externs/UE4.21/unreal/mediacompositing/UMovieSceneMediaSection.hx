/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.mediacompositing;

/**
  WARNING: This type was defined as MinimalAPI on its declaration. Because of that, its properties/methods are inaccessible
  
  Implements a movie scene section for media playback.
**/
@:umodule("MediaCompositing")
@:glueCppIncludes("MovieSceneMediaSection.h")
@:uextern @:uclass extern class UMovieSceneMediaSection extends unreal.moviescene.UMovieSceneSection {
  #if WITH_EDITORONLY_DATA
  
  /**
    The reference frame offset for single thumbnail rendering
  **/
  @:uproperty public var ThumbnailReferenceOffset : unreal.Float32;
  #end // WITH_EDITORONLY_DATA
  
  /**
    The external media player this track should control.
  **/
  @:uproperty public var ExternalMediaPlayer : unreal.mediaassets.UMediaPlayer;
  
  /**
    If true, this track will control a previously created media player instead of automatically creating one.
  **/
  @:uproperty public var bUseExternalMediaPlayer : Bool;
  
  /**
    The media sound component that receives the track's audio output.
  **/
  @:uproperty public var MediaSoundComponent : unreal.mediaassets.UMediaSoundComponent;
  
  /**
    The media texture that receives the track's video output.
  **/
  @:uproperty public var MediaTexture : unreal.mediaassets.UMediaTexture;
  
  /**
    Should the media player be set to loop? This can be helpful for media formats that can use this information (such as exr sequences) to pre-cache the starting data when nearing the end of playback. Does not cause the media to continue playing after the end of the section is reached.
  **/
  @:uproperty public var bLooping : Bool;
  
  /**
    The source to play with this video track.
  **/
  @:uproperty public var MediaSource : unreal.mediaassets.UMediaSource;
  
}
