/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.foliage;

@:umodule("Foliage")
@:glueCppIncludes("ProceduralFoliageSpawner.h")
@:uextern @:uclass extern class UProceduralFoliageSpawner extends unreal.UObject {
  
  /**
    Minimum size of the quad tree used during the simulation. Reduce if too many instances are in splittable leaf quads (as warned in the log).
  **/
  @:uproperty public var MinimumQuadTreeSize : unreal.Float32;
  
  /**
    The number of unique tiles to generate. The final simulation is a procedurally determined combination of the various unique tiles.
  **/
  @:uproperty public var NumUniqueTiles : unreal.Int32;
  
  /**
    Length of the tile (in cm) along one axis. The total area of the tile will be TileSize*TileSize.
  **/
  @:uproperty public var TileSize : unreal.Float32;
  
  /**
    The seed used for generating the randomness of the simulation.
  **/
  @:uproperty public var RandomSeed : unreal.Int32;
  @:ufunction(BlueprintCallable) @:final public function Simulate(NumSteps : unreal.Int32 = -1) : Void;
  
}
