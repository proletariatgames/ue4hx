/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.foliage;

@:umodule("Foliage")
@:glueCppIncludes("ProceduralFoliageComponent.h")
@:uextern @:uclass extern class UProceduralFoliageComponent extends unreal.UActorComponent {
  #if WITH_EDITORONLY_DATA
  
  /**
    Whether to visualize the tiles used for the foliage spawner simulation
  **/
  @:uproperty public var bShowDebugTiles : Bool;
  
  /**
    Whether to place foliage on other blocking foliage geometry
  **/
  @:uproperty public var bAllowFoliage : Bool;
  
  /**
    Whether to place foliage on translucent geometry
  **/
  @:uproperty public var bAllowTranslucent : Bool;
  
  /**
    Whether to place foliage on StaticMesh
  **/
  @:uproperty public var bAllowStaticMesh : Bool;
  
  /**
    Whether to place foliage on BSP
  **/
  @:uproperty public var bAllowBSP : Bool;
  
  /**
    Whether to place foliage on landscape
  **/
  @:uproperty public var bAllowLandscape : Bool;
  #end // WITH_EDITORONLY_DATA
  
  /**
    The amount of overlap between simulation tiles (in cm).
  **/
  @:uproperty public var TileOverlap : unreal.Float32;
  
  /**
    The procedural foliage spawner used to generate foliage instances within this volume.
  **/
  @:uproperty public var FoliageSpawner : unreal.foliage.UProceduralFoliageSpawner;
  
}
