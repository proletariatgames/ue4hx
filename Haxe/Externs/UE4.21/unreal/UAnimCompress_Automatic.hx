/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;

/**
  WARNING: This type was defined as MinimalAPI on its declaration. Because of that, its properties/methods are inaccessible
  
  
**/
@:glueCppIncludes("Animation/AnimCompress_Automatic.h")
@:uextern @:uclass extern class UAnimCompress_Automatic extends unreal.UAnimCompress {
  
  /**
    If true, then an exhaustive search is used otherwise only a short list of the best methods is tried
  **/
  @:uproperty public var bTryExhaustiveSearch : Bool;
  
  /**
    If true and the existing compression error is greater than Max End Effector Error, then Max End Effector Error will be effectively raised to the existing error level
  **/
  @:uproperty public var bRaiseMaxErrorToExisting : Bool;
  
  /**
    If true and the existing compression error is greater than Max End Effector Error, then any compression technique (even one that increases the size) with a lower error will be used until it falls below the threshold
    Also known as "force below threshold"
  **/
  @:uproperty public var bAutoReplaceIfExistingErrorTooGreat : Bool;
  
  /**
    If true, then the animation will be first recompressed with it's current compressor if non-NULL, or with the global default compressor (specified in the engine ini)
    Also known as "First Recompress Using Current Or Default"
  **/
  @:uproperty public var bRunCurrentDefaultCompressor : Bool;
  
  /**
    Maximum amount of error that a compression technique can introduce in an end effector
    Determines the current setting for world - space error tolerance in the animation compressor.
    When requested, animation being compressed will also consider an alternative compression
    method if the end result of that method produces less error than the AlternativeCompressionThreshold.
    Also known as "Alternative Compression Threshold"
  **/
  @:uproperty public var MaxEndEffectorError : unreal.Float32;
  
}
