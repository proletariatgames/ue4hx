/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;

/**
  WARNING: This type was defined as MinimalAPI on its declaration. Because of that, its properties/methods are inaccessible
  
  USkeleton : that links between mesh and animation
          - Bone hierarchy for animations
          - Bone/track linkup between mesh and animation
          - Retargetting related
          - Mirror table
**/
@:glueCppIncludes("Animation/Skeleton.h")
@:uextern @:uclass extern class USkeleton extends unreal.UObject implements unreal.IInterface_AssetUserData implements unreal.IInterface_PreviewMeshProvider {
  
  /**
    Array of user data stored with the asset
  **/
  @:uproperty private var AssetUserData : unreal.TArray<unreal.UAssetUserData>;
  #if WITH_EDITORONLY_DATA
  
  /**
    Attached assets component for this skeleton
  **/
  @:uproperty public var PreviewAttachedAssetContainer : unreal.FPreviewAssetAttachContainer;
  
  /**
    AnimNotifiers that has been created. Right now there is no delete step for this, but in the future we'll supply delete*
  **/
  @:uproperty public var AnimationNotifies : unreal.TArray<unreal.FName>;
  #end // WITH_EDITORONLY_DATA
  
  /**
    List of blend profiles available in this skeleton
  **/
  @:uproperty public var BlendProfiles : unreal.TArray<unreal.UBlendProfile>;
  
  /**
    Container for smart name mappings
  **/
  @:uproperty private var SmartNames : unreal.FSmartNameContainer;
  
  /**
    Array of named socket locations, set up in editor and used as a shortcut instead of specifying
    everything explicitly to AttachComponent in the SkeletalMeshComponent.
  **/
  @:uproperty public var Sockets : unreal.TArray<unreal.USkeletalMeshSocket>;
  
  /**
    Array of this skeletons virtual bones. These are new bones are links between two existing bones
    and are baked into all the skeletons animations
  **/
  @:uproperty private var VirtualBones : unreal.TArray<unreal.FVirtualBone>;
  
  /**
    Guid for virtual bones.
    Separate so that we don't have to dirty the original guid when only changing virtual bones
  **/
  @:uproperty private var VirtualBoneGuid : unreal.FGuid;
  
  /**
    Reference skeleton poses in local space
  **/
  @:deprecated @:uproperty private var RefLocalPoses_DEPRECATED : unreal.TArray<unreal.FTransform>;
  
  /**
    Skeleton bone tree - each contains name and parent index*
  **/
  @:uproperty private var BoneTree : unreal.TArray<unreal.FBoneNode>;
  // Interface_AssetUserData interface implementation
  // Interface_PreviewMeshProvider interface implementation
  
}
