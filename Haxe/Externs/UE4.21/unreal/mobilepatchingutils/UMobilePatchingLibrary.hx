/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.mobilepatchingutils;

@:umodule("MobilePatchingUtils")
@:glueCppIncludes("Private/MobilePatchingLibrary.h")
@:uextern @:uclass extern class UMobilePatchingLibrary extends unreal.UBlueprintFunctionLibrary {
  
  /**
    Get the installed content. Will return non-null object if there is an installed content at specified directory
    User can choose to mount installed content into the game
  **/
  @:ufunction(BlueprintCallable) static public function GetInstalledContent(InstallDirectory : unreal.FString) : unreal.mobilepatchingutils.UMobileInstalledContent;
  
  /**
    Attempt to download manifest file using specified manifest URL.
    On success it will return an object that represents remote content. This object can be queried for additional information, like total content size, download size, etc.
    User can choose to download and install remote content.
    @param       RemoteManifestURL : URL from where manifest file can be downloaded. (http://my-server.com/awesomecontent.manifest)
    @param       CloudURL :  URL from where content chunk data can be downloaded. (http://my-server.com/awesomecontent/clouddir)
    @param       InstallDirectory: Relative directory to where downloaded content should be installed (MyContent/AwesomeContent)
    @param       OnSucceeded: Callback on manifest download success. Will return object that represents remote content
    @param       OnFailed: Callback on manifest download fail. Will return error message text and error integer code
  **/
  @:ufunction(BlueprintCallable) static public function RequestContent(RemoteManifestURL : unreal.FString, CloudURL : unreal.FString, InstallDirectory : unreal.FString, OnSucceeded : unreal.mobilepatchingutils.FOnRequestContentSucceeded, OnFailed : unreal.mobilepatchingutils.FOnRequestContentFailed) : Void;
  
  /**
    Whether WiFi connection is currently available
  **/
  @:ufunction(BlueprintCallable) static public function HasActiveWiFiConnection() : Bool;
  
  /**
    Get the name of currently selected device profile name
  **/
  @:ufunction(BlueprintCallable) static public function GetActiveDeviceProfileName() : unreal.FString;
  
  /**
    Get the list of supported platform names on this device. Example: Android_ETC2, Android_ASTC
  **/
  @:ufunction(BlueprintCallable) static public function GetSupportedPlatformNames() : unreal.TArray<unreal.FString>;
  
}
