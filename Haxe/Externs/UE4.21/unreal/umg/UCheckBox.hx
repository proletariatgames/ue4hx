/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.umg;

/**
  The checkbox widget allows you to display a toggled state of 'unchecked', 'checked' and
  'indeterminable.  You can use the checkbox for a classic checkbox, or as a toggle button,
  or as radio buttons.
  
  * Single Child
  * Toggle
**/
@:umodule("UMG")
@:glueCppIncludes("UMG.h")
@:uextern @:uclass extern class UCheckBox extends unreal.umg.UContentWidget {
  
  /**
    Called when the checked state has changed
  **/
  @:uproperty public var OnCheckStateChanged : unreal.umg.FOnCheckBoxComponentStateChanged;
  
  /**
    Sometimes a button should only be mouse-clickable and never keyboard focusable.
  **/
  @:uproperty public var IsFocusable : Bool;
  
  /**
    The color of the background border
  **/
  @:deprecated @:uproperty public var BorderBackgroundColor_DEPRECATED : unreal.slatecore.FSlateColor;
  
  /**
    Spacing between the check box image and its content
  **/
  @:deprecated @:uproperty public var Padding_DEPRECATED : unreal.slatecore.FMargin;
  
  /**
    How the content of the toggle button should align within the given space
  **/
  @:uproperty public var HorizontalAlignment : unreal.slatecore.EHorizontalAlignment;
  
  /**
    Image to use when the checkbox is in an ambiguous state and pressed
  **/
  @:deprecated @:uproperty public var UndeterminedPressedImage_DEPRECATED : unreal.USlateBrushAsset;
  
  /**
    Image to use when the checkbox is checked and hovered
  **/
  @:deprecated @:uproperty public var UndeterminedHoveredImage_DEPRECATED : unreal.USlateBrushAsset;
  
  /**
    Image to use when the checkbox is in an ambiguous state and hovered
  **/
  @:deprecated @:uproperty public var UndeterminedImage_DEPRECATED : unreal.USlateBrushAsset;
  
  /**
    Image to use when the checkbox is checked and pressed
  **/
  @:deprecated @:uproperty public var CheckedPressedImage_DEPRECATED : unreal.USlateBrushAsset;
  
  /**
    Image to use when the checkbox is checked and hovered
  **/
  @:deprecated @:uproperty public var CheckedHoveredImage_DEPRECATED : unreal.USlateBrushAsset;
  
  /**
    Image to use when the checkbox is checked
  **/
  @:deprecated @:uproperty public var CheckedImage_DEPRECATED : unreal.USlateBrushAsset;
  
  /**
    Image to use when the checkbox is unchecked and pressed
  **/
  @:deprecated @:uproperty public var UncheckedPressedImage_DEPRECATED : unreal.USlateBrushAsset;
  
  /**
    Image to use when the checkbox is unchecked and hovered
  **/
  @:deprecated @:uproperty public var UncheckedHoveredImage_DEPRECATED : unreal.USlateBrushAsset;
  
  /**
    Image to use when the checkbox is unchecked
  **/
  @:deprecated @:uproperty public var UncheckedImage_DEPRECATED : unreal.USlateBrushAsset;
  
  /**
    Style of the check box
  **/
  @:deprecated @:uproperty public var Style_DEPRECATED : unreal.slatecore.USlateWidgetStyleAsset;
  
  /**
    The checkbox bar style
  **/
  @:uproperty public var WidgetStyle : unreal.slatecore.FCheckBoxStyle;
  
  /**
    A bindable delegate for the IsChecked.
  **/
  @:uproperty public var CheckedStateDelegate : unreal.umg.FGetCheckBoxState;
  
  /**
    Whether the check box is currently in a checked state
  **/
  @:uproperty public var CheckedState : unreal.slatecore.ECheckBoxState;
  
  /**
    Returns true if this button is currently pressed
  **/
  @:ufunction(BlueprintCallable) @:thisConst @:final public function IsPressed() : Bool;
  
  /**
    Returns true if the checkbox is currently checked
  **/
  @:ufunction(BlueprintCallable) @:thisConst @:final public function IsChecked() : Bool;
  
  /**
    @return the full current checked state.
  **/
  @:ufunction(BlueprintCallable) @:thisConst @:final public function GetCheckedState() : unreal.slatecore.ECheckBoxState;
  
  /**
    Sets the checked state.
  **/
  @:ufunction(BlueprintCallable) @:final public function SetIsChecked(InIsChecked : Bool) : Void;
  
  /**
    Sets the checked state.
  **/
  @:ufunction(BlueprintCallable) @:final public function SetCheckedState(InCheckedState : unreal.slatecore.ECheckBoxState) : Void;
  
}
