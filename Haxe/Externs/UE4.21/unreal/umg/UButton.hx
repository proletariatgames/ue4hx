/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.umg;

/**
  The button is a click-able primitive widget to enable basic interaction, you
  can place any other widget inside a button to make a more complex and
  interesting click-able element in your UI.
  
  * Single Child
  * Clickable
**/
@:umodule("UMG")
@:glueCppIncludes("UMG.h")
@:uextern @:uclass extern class UButton extends unreal.umg.UContentWidget {
  @:uproperty public var OnUnhovered : unreal.umg.FOnButtonHoverEvent;
  @:uproperty public var OnHovered : unreal.umg.FOnButtonHoverEvent;
  
  /**
    Called when the button is released
  **/
  @:uproperty public var OnReleased : unreal.umg.FOnButtonReleasedEvent;
  
  /**
    Called when the button is pressed
  **/
  @:uproperty public var OnPressed : unreal.umg.FOnButtonPressedEvent;
  
  /**
    Called when the button is clicked
  **/
  @:uproperty public var OnClicked : unreal.umg.FOnButtonClickedEvent;
  
  /**
    Sometimes a button should only be mouse-clickable and never keyboard focusable.
  **/
  @:uproperty public var IsFocusable : Bool;
  
  /**
    The type of keyboard/gamepad button press action required by the user to trigger the buttons 'Click'
  **/
  @:uproperty public var PressMethod : unreal.slatecore.EButtonPressMethod;
  
  /**
    The type of touch action required by the user to trigger the buttons 'Click'
  **/
  @:uproperty public var TouchMethod : unreal.slatecore.EButtonTouchMethod;
  
  /**
    The type of mouse action required by the user to trigger the buttons 'Click'
  **/
  @:uproperty public var ClickMethod : unreal.slatecore.EButtonClickMethod;
  
  /**
    The color multiplier for the button background
  **/
  @:uproperty public var BackgroundColor : unreal.FLinearColor;
  
  /**
    The color multiplier for the button content
  **/
  @:uproperty public var ColorAndOpacity : unreal.FLinearColor;
  
  /**
    The button style used at runtime
  **/
  @:uproperty public var WidgetStyle : unreal.slatecore.FButtonStyle;
  
  /**
    The template style asset, used to seed the mutable instance of the style.
  **/
  @:deprecated @:uproperty public var Style_DEPRECATED : unreal.slatecore.USlateWidgetStyleAsset;
  
  /**
    Sets the color multiplier for the button background
  **/
  @:ufunction(BlueprintCallable) @:final public function SetStyle(InStyle : unreal.Const<unreal.PRef<unreal.slatecore.FButtonStyle>>) : Void;
  
  /**
    Sets the color multiplier for the button content
  **/
  @:ufunction(BlueprintCallable) @:final public function SetColorAndOpacity(InColorAndOpacity : unreal.FLinearColor) : Void;
  
  /**
    Sets the color multiplier for the button background
  **/
  @:ufunction(BlueprintCallable) @:final public function SetBackgroundColor(InBackgroundColor : unreal.FLinearColor) : Void;
  
  /**
    Returns true if the user is actively pressing the button.  Do not use this for detecting 'Clicks', use the OnClicked event instead.
    
    @return true if the user is actively pressing the button otherwise false.
  **/
  @:ufunction(BlueprintCallable) @:thisConst @:final public function IsPressed() : Bool;
  @:ufunction(BlueprintCallable) @:final public function SetClickMethod(InClickMethod : unreal.slatecore.EButtonClickMethod) : Void;
  @:ufunction(BlueprintCallable) @:final public function SetTouchMethod(InTouchMethod : unreal.slatecore.EButtonTouchMethod) : Void;
  @:ufunction(BlueprintCallable) @:final public function SetPressMethod(InPressMethod : unreal.slatecore.EButtonPressMethod) : Void;
  
}
