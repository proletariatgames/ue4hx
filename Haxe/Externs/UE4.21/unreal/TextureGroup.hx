/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;

/**
  @warning: if this is changed:
      update BaseEngine.ini [SystemSettings]
      you might have to update the update Game's DefaultEngine.ini [SystemSettings]
      order and actual name can never change (order is important!)
  
  TEXTUREGROUP_Cinematic: should be used for Cinematics which will be baked out
                          and want to have the highest settings
**/
@:glueCppIncludes("Classes/Engine/TextureDefines.h")
@:uname("TextureGroup")
@:uextern @:uenum extern enum TextureGroup {
  
  /**
    World
  **/
  @DisplayName("World")
  TEXTUREGROUP_World;
  
  /**
    WorldNormalMap
  **/
  @DisplayName("WorldNormalMap")
  TEXTUREGROUP_WorldNormalMap;
  
  /**
    WorldSpecular
  **/
  @DisplayName("WorldSpecular")
  TEXTUREGROUP_WorldSpecular;
  
  /**
    Character
  **/
  @DisplayName("Character")
  TEXTUREGROUP_Character;
  
  /**
    CharacterNormalMap
  **/
  @DisplayName("CharacterNormalMap")
  TEXTUREGROUP_CharacterNormalMap;
  
  /**
    CharacterSpecular
  **/
  @DisplayName("CharacterSpecular")
  TEXTUREGROUP_CharacterSpecular;
  
  /**
    Weapon
  **/
  @DisplayName("Weapon")
  TEXTUREGROUP_Weapon;
  
  /**
    WeaponNormalMap
  **/
  @DisplayName("WeaponNormalMap")
  TEXTUREGROUP_WeaponNormalMap;
  
  /**
    WeaponSpecular
  **/
  @DisplayName("WeaponSpecular")
  TEXTUREGROUP_WeaponSpecular;
  
  /**
    Vehicle
  **/
  @DisplayName("Vehicle")
  TEXTUREGROUP_Vehicle;
  
  /**
    VehicleNormalMap
  **/
  @DisplayName("VehicleNormalMap")
  TEXTUREGROUP_VehicleNormalMap;
  
  /**
    VehicleSpecular
  **/
  @DisplayName("VehicleSpecular")
  TEXTUREGROUP_VehicleSpecular;
  
  /**
    Cinematic
  **/
  @DisplayName("Cinematic")
  TEXTUREGROUP_Cinematic;
  
  /**
    Effects
  **/
  @DisplayName("Effects")
  TEXTUREGROUP_Effects;
  
  /**
    EffectsNotFiltered
  **/
  @DisplayName("EffectsNotFiltered")
  TEXTUREGROUP_EffectsNotFiltered;
  
  /**
    Skybox
  **/
  @DisplayName("Skybox")
  TEXTUREGROUP_Skybox;
  
  /**
    UI
  **/
  @DisplayName("UI")
  TEXTUREGROUP_UI;
  
  /**
    Lightmap
  **/
  @DisplayName("Lightmap")
  TEXTUREGROUP_Lightmap;
  
  /**
    RenderTarget
  **/
  @DisplayName("RenderTarget")
  TEXTUREGROUP_RenderTarget;
  
  /**
    MobileFlattened
  **/
  @DisplayName("MobileFlattened")
  TEXTUREGROUP_MobileFlattened;
  
  /**
    Obsolete - kept for backwards compatibility.
    @DisplayName ProcBuilding_Face
  **/
  @DisplayName("ProcBuilding_Face")
  TEXTUREGROUP_ProcBuilding_Face;
  
  /**
    Obsolete - kept for backwards compatibility.
    @DisplayName ProcBuilding_LightMap
  **/
  @DisplayName("ProcBuilding_LightMap")
  TEXTUREGROUP_ProcBuilding_LightMap;
  
  /**
    Shadowmap
  **/
  @DisplayName("Shadowmap")
  TEXTUREGROUP_Shadowmap;
  
  /**
    No compression, no mips.
    @DisplayName ColorLookupTable
  **/
  @DisplayName("ColorLookupTable")
  TEXTUREGROUP_ColorLookupTable;
  
  /**
    Terrain_Heightmap
  **/
  @DisplayName("Terrain_Heightmap")
  TEXTUREGROUP_Terrain_Heightmap;
  
  /**
    Terrain_Weightmap
  **/
  @DisplayName("Terrain_Weightmap")
  TEXTUREGROUP_Terrain_Weightmap;
  
  /**
    Using this TextureGroup triggers special mip map generation code only useful for the BokehDOF post process.
    @DisplayName Bokeh
  **/
  @DisplayName("Bokeh")
  TEXTUREGROUP_Bokeh;
  
  /**
    No compression, created on import of a .IES file.
    @DisplayName IESLightProfile
  **/
  @DisplayName("IESLightProfile")
  TEXTUREGROUP_IESLightProfile;
  
  /**
    Non-filtered, useful for 2D rendering.
    @DisplayName 2D Pixels (unfiltered)
  **/
  @DisplayName("2D Pixels (unfiltered)")
  TEXTUREGROUP_Pixels2D;
  
  /**
    Hierarchical LOD generated textures
    @DisplayName Hierarchical LOD
  **/
  @DisplayName("Hierarchical LOD")
  TEXTUREGROUP_HierarchicalLOD;
  
  /**
    Impostor Color Textures
    @DisplayName Impostor Color
  **/
  @DisplayName("Impostor Color")
  TEXTUREGROUP_Impostor;
  
  /**
    Impostor Normal and Depth, use default compression
    @DisplayName Impostor Normal and Depth
  **/
  @DisplayName("Impostor Normal and Depth")
  TEXTUREGROUP_ImpostorNormalDepth;
  
  /**
    Project specific group, rename in Engine.ini, [EnumRemap] TEXTUREGROUP_Project**.DisplayName=My Fun Group
    @DisplayName Project Group 01
  **/
  @DisplayName("Project Group 01")
  TEXTUREGROUP_Project01;
  
  /**
    Project Group 02
  **/
  @DisplayName("Project Group 02")
  TEXTUREGROUP_Project02;
  
  /**
    Project Group 03
  **/
  @DisplayName("Project Group 03")
  TEXTUREGROUP_Project03;
  
  /**
    Project Group 04
  **/
  @DisplayName("Project Group 04")
  TEXTUREGROUP_Project04;
  
  /**
    Project Group 05
  **/
  @DisplayName("Project Group 05")
  TEXTUREGROUP_Project05;
  
  /**
    Project Group 06
  **/
  @DisplayName("Project Group 06")
  TEXTUREGROUP_Project06;
  
  /**
    Project Group 07
  **/
  @DisplayName("Project Group 07")
  TEXTUREGROUP_Project07;
  
  /**
    Project Group 08
  **/
  @DisplayName("Project Group 08")
  TEXTUREGROUP_Project08;
  
  /**
    Project Group 09
  **/
  @DisplayName("Project Group 09")
  TEXTUREGROUP_Project09;
  
  /**
    Project Group 10
  **/
  @DisplayName("Project Group 10")
  TEXTUREGROUP_Project10;
  TEXTUREGROUP_MAX;
  
}
