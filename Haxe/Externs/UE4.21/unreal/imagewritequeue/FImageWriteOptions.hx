/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.imagewritequeue;

/**
  Options specific to writing image files to disk
**/
@:umodule("ImageWriteQueue")
@:glueCppIncludes("Public/ImageWriteBlueprintLibrary.h")
@:noCopy @:noEquals @:uextern @:ustruct extern class FImageWriteOptions {
  
  /**
    Whether to perform the writing asynchronously, or to block the game thread until it is complete
  **/
  @:uproperty public var bAsync : Bool;
  
  /**
    Whether to overwrite the image if it already exists
  **/
  @:uproperty public var bOverwriteFile : Bool;
  
  /**
    An image format specific compression setting. Either 0 (Default) or 1 (Uncompressed) for EXRs, or a value between 0 and 100.
  **/
  @:uproperty public var CompressionQuality : unreal.Int32;
  
  /**
    A callback to invoke when the image has been written, or there was an error
  **/
  @:uproperty public var OnComplete : unreal.imagewritequeue.FOnImageWriteComplete;
  
  /**
    The desired output image format to write to disk
  **/
  @:uproperty public var Format : unreal.imagewritequeue.EDesiredImageFormat;
  
}
