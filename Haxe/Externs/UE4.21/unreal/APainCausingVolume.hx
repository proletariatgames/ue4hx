/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;

/**
  Volume that causes damage over time to any Actor that overlaps its collision.
**/
@:glueCppIncludes("GameFramework/PainCausingVolume.h")
@:uextern @:uclass extern class APainCausingVolume extends unreal.APhysicsVolume {
  
  /**
    Controller that gets credit for any damage caused by this volume
  **/
  @:uproperty public var DamageInstigator : unreal.AController;
  
  /**
    Checkpointed bPainCausing value
  **/
  @:uproperty public var BACKUP_bPainCausing : Bool;
  
  /**
    if bPainCausing, cause pain when something enters the volume in addition to damage each second
  **/
  @:uproperty public var bEntryPain : Bool;
  
  /**
    If pain causing, time between damage applications.
  **/
  @:uproperty public var PainInterval : unreal.Float32;
  
  /**
    Type of damage done
  **/
  @:uproperty public var DamageType : unreal.TSubclassOf<unreal.UDamageType>;
  
  /**
    Damage done per second to actors in this volume when bPainCausing=true
  **/
  @:uproperty public var DamagePerSec : unreal.Float32;
  
  /**
    Whether volume currently causes damage.
  **/
  @:uproperty public var bPainCausing : Bool;
  
}
