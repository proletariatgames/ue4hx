/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;

/**
  WARNING: This type was defined as MinimalAPI on its declaration. Because of that, its properties/methods are inaccessible
  
  A DamageType is intended to define and describe a particular form of damage and to provide an avenue
  for customizing responses to damage from various sources.
  
  For example, a game could make a DamageType_Fire set it up to ignite the damaged actor.
  
  DamageTypes are never instanced and should be treated as immutable data holders with static code
  functionality.  They should never be stateful.
**/
@:glueCppIncludes("GameFramework/DamageType.h")
@:uextern @:uclass extern class UDamageType extends unreal.UObject {
  
  /**
    Damage fall-off for radius damage (exponent).  Default 1.0=linear, 2.0=square of distance, etc.
  **/
  @:uproperty public var DamageFalloff : unreal.Float32;
  
  /**
    How much the damage spreads on a destructible mesh
  **/
  @:uproperty public var DestructibleDamageSpreadScale : unreal.Float32;
  
  /**
    How large the impulse should be applied to destructible meshes
  **/
  @:uproperty public var DestructibleImpulse : unreal.Float32;
  
  /**
    The magnitude of impulse to apply to the Actors damaged by this type.
  **/
  @:uproperty public var DamageImpulse : unreal.Float32;
  
  /**
    When applying radial impulses, whether to treat as impulse or velocity change.
  **/
  @:uproperty public var bRadialDamageVelChange : Bool;
  
  /**
    True to scale imparted momentum by the receiving pawn's mass for pawns using character movement
  **/
  @:uproperty public var bScaleMomentumByMass : Bool;
  
  /**
    True if this damagetype is caused by the world (falling off level, into lava, etc).
  **/
  @:uproperty public var bCausedByWorld : Bool;
  
}
