/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;

/**
  A sphere generally used for simple collision. Bounds are rendered as lines in the editor.
**/
@:glueCppIncludes("Components/SphereComponent.h")
@:uextern @:uclass extern class USphereComponent extends unreal.UShapeComponent {
  
  /**
    The radius of the sphere *
  **/
  @:uproperty private var SphereRadius : unreal.Float32;
  
  /**
    Change the sphere radius. This is the unscaled radius, before component scale is applied.
    @param       InSphereRadius: the new sphere radius
    @param       bUpdateOverlaps: if true and this shape is registered and collides, updates touching array for owner actor.
  **/
  @:ufunction(BlueprintCallable) @:final public function SetSphereRadius(InSphereRadius : unreal.Float32, bUpdateOverlaps : Bool = true) : Void;
  
  /**
    @return the radius of the sphere, with component scale applied.
  **/
  @:ufunction(BlueprintCallable) @:thisConst @:final public function GetScaledSphereRadius() : unreal.Float32;
  
  /**
    @return the radius of the sphere, ignoring component scale.
  **/
  @:ufunction(BlueprintCallable) @:thisConst @:final public function GetUnscaledSphereRadius() : unreal.Float32;
  
  /**
    Get the scale used by this shape. This is a uniform scale that is the minimum of any non-uniform scaling.
    @return the scale used by this shape.
  **/
  @:ufunction(BlueprintCallable) @:thisConst @:final public function GetShapeScale() : unreal.Float32;
  
}
