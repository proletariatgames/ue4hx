/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;

/**
  WARNING: This type was defined as MinimalAPI on its declaration. Because of that, its properties/methods are inaccessible
  
  A DataAsset that implements GetPrimaryAssetId and has asset bundle support, which makes it something that can be manually loaded/unloaded from the AssetManager
  Making blueprint subclasses of this is useful because you can make blueprint-only primary asset types
  Blueprint subclasses will end up with a PrimaryAssetType equal to the name of the first native class found going up the hierarchy, or the top level blueprint class that directly subclasses this
  IE, if you have PrimaryDataAsset -> ParentNativeClass -> ChildNativeClass -> BlueprintAsset the type will be ChildNativeClass
  Whereas if you have PrimaryDataAsset -> ParentBlueprintClass -> ChildBlueprintClass the type will be ParentBlueprintClass
  To override this behavior, override GetPrimaryAssetId in your native class
**/
@:glueCppIncludes("Engine/DataAsset.h")
@:uextern @:uclass extern class UPrimaryDataAsset extends unreal.UDataAsset {
  #if WITH_EDITORONLY_DATA
  
  /**
    Asset Bundle data computed at save time. In cooked builds this is accessible from AssetRegistry
  **/
  @:uproperty private var AssetBundleData : unreal.assetregistry.FAssetBundleData;
  #end // WITH_EDITORONLY_DATA
  
}
