/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;

/**
  WARNING: This type was defined as MinimalAPI on its declaration. Because of that, its properties/methods are inaccessible
  
  Provides local control over volumetric lightmap density.  Only convex shapes supported.
**/
@:glueCppIncludes("Lightmass/VolumetricLightmapDensityVolume.h")
@:uextern @:uclass extern class AVolumetricLightmapDensityVolume extends unreal.AVolume {
  
  /**
    The Volumetric Lightmap has 3 mipmaps, where the highest density mipmap (mip0) corresponds to VolumetricLightmapDetailCellSize.
    mip0: DetailCellSize
    mip1: DetailCellSize * 4
    mip2: DetailCellSize * 16
    
    By default, highest density will be placed around static geometry and static lights, but AllowedMipLevelRange can be used to override this behavior.
    Examples:
    [0, 3] = Volume does nothing
    [1, 3] = Volume removes highest density mip, even near static geometry, which can be useful to save memory ('stat MapBuildData')
    [0, 0] = Volume forces highest density.  Warning: using this on a large area can greatly increase memory and build times!
    When multiple volumes overlap, the smallest (highest density) values will be used.
  **/
  @:uproperty public var AllowedMipLevelRange : unreal.FInt32Interval;
  
}
