/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;

/**
  Define view modes to get specific show flag settings (some on, some off and some are not altered)
  Don't change the order, the ID is serialized with the editor
**/
@:glueCppIncludes("Classes/Engine/EngineBaseTypes.h")
@:uname("EViewModeIndex")
@:uextern @:uenum extern enum EViewModeIndex {
  
  /**
    Wireframe w/ brushes.
  **/
  VMI_BrushWireframe;
  
  /**
    Wireframe w/ BSP.
  **/
  VMI_Wireframe;
  
  /**
    Unlit.
  **/
  VMI_Unlit;
  
  /**
    Lit.
  **/
  VMI_Lit;
  VMI_Lit_DetailLighting;
  
  /**
    Lit wo/ materials.
  **/
  VMI_LightingOnly;
  
  /**
    Colored according to light count.
  **/
  VMI_LightComplexity;
  
  /**
    Colored according to shader complexity.
  **/
  VMI_ShaderComplexity;
  
  /**
    Colored according to world-space LightMap texture density.
  **/
  VMI_LightmapDensity;
  
  /**
    Colored according to light count - showing lightmap texel density on texture mapped objects.
  **/
  VMI_LitLightmapDensity;
  VMI_ReflectionOverride;
  VMI_VisualizeBuffer;
  
  /**
    Colored according to stationary light overlap.
  **/
  VMI_StationaryLightOverlap;
  VMI_CollisionPawn;
  VMI_CollisionVisibility;
  
  /**
    Colored according to the current LOD index.
  **/
  VMI_LODColoration;
  
  /**
    Colored according to the quad coverage.
  **/
  VMI_QuadOverdraw;
  
  /**
    Visualize the accuracy of the primitive distance computed for texture streaming.
  **/
  VMI_PrimitiveDistanceAccuracy;
  
  /**
    Visualize the accuracy of the mesh UV densities computed for texture streaming.
  **/
  VMI_MeshUVDensityAccuracy;
  
  /**
    Colored according to shader complexity, including quad overdraw.
  **/
  VMI_ShaderComplexityWithQuadOverdraw;
  
  /**
    Colored according to the current HLOD index.
  **/
  VMI_HLODColoration;
  
  /**
    Group item for LOD and HLOD coloration
  **/
  VMI_GroupLODColoration;
  
  /**
    Visualize the accuracy of the material texture scales used for texture streaming.
  **/
  VMI_MaterialTextureScaleAccuracy;
  
  /**
    Compare the required texture resolution to the actual resolution.
  **/
  VMI_RequiredTextureResolution;
  VMI_Max;
  VMI_Unknown;
  
}
