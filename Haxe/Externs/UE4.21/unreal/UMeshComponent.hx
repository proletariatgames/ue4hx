/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;

/**
  MeshComponent is an abstract base for any component that is an instance of a renderable collection of triangles.
  
  @see UStaticMeshComponent
  @see USkeletalMeshComponent
**/
@:glueCppIncludes("Components/MeshComponent.h")
@:uextern @:uclass extern class UMeshComponent extends unreal.UPrimitiveComponent {
  
  /**
    Material overrides.
  **/
  @:uproperty public var OverrideMaterials : unreal.TArray<unreal.UMaterialInterface>;
  @:ufunction(BlueprintCallable) @:thisConst public function GetMaterials() : unreal.TArray<unreal.UMaterialInterface>;
  @:ufunction(BlueprintCallable) @:thisConst public function GetMaterialIndex(MaterialSlotName : unreal.FName) : unreal.Int32;
  @:ufunction(BlueprintCallable) @:thisConst public function GetMaterialSlotNames() : unreal.TArray<unreal.FName>;
  @:ufunction(BlueprintCallable) @:thisConst public function IsMaterialSlotNameValid(MaterialSlotName : unreal.FName) : Bool;
  
  /**
    Tell the streaming system to start loading all textures with all mip-levels.
    @param Seconds                                                  Number of seconds to force all mip-levels to be resident
    @param bPrioritizeCharacterTextures             Whether character textures should be prioritized for a while by the streaming system
    @param CinematicTextureGroups                   Bitfield indicating which texture groups that use extra high-resolution mips
  **/
  @:ufunction(BlueprintCallable) public function PrestreamTextures(Seconds : unreal.Float32, bPrioritizeCharacterTextures : Bool, CinematicTextureGroups : unreal.Int32 = 0) : Void;
  
  /**
    Set all occurrences of Scalar Material Parameters with ParameterName in the set of materials of the SkeletalMesh to ParameterValue
  **/
  @:ufunction(BlueprintCallable) @:final public function SetScalarParameterValueOnMaterials(ParameterName : unreal.Const<unreal.FName>, ParameterValue : unreal.Float32) : Void;
  
  /**
    Set all occurrences of Vector Material Parameters with ParameterName in the set of materials of the SkeletalMesh to ParameterValue
  **/
  @:ufunction(BlueprintCallable) @:final public function SetVectorParameterValueOnMaterials(ParameterName : unreal.Const<unreal.FName>, ParameterValue : unreal.Const<unreal.FVector>) : Void;
  
}
