/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.vreditor;

/**
  Represents the interactor in the world
**/
@:umodule("VREditor")
@:glueCppIncludes("VREditorMotionControllerInteractor.h")
@:uextern @:uclass extern class UVREditorMotionControllerInteractor extends unreal.vreditor.UVREditorInteractor {
  
  /**
    MID for hand mesh
  **/
  @:uproperty private var HandMeshMID : unreal.UMaterialInstanceDynamic;
  
  /**
    Hover point light
  **/
  @:uproperty private var HoverPointLightComponent : unreal.UPointLightComponent;
  
  /**
    Hover impact indicator mesh
  **/
  @:uproperty private var HoverMeshComponent : unreal.UStaticMeshComponent;
  
  /**
    MID for laser pointer material (translucent parts)
  **/
  @:uproperty private var TranslucentLaserPointerMID : unreal.UMaterialInstanceDynamic;
  
  /**
    MID for laser pointer material (opaque parts)
  **/
  @:uproperty private var LaserPointerMID : unreal.UMaterialInstanceDynamic;
  
  /**
    Spline meshes for curved laser
  **/
  @:uproperty private var LaserSplineMeshComponents : unreal.TArray<unreal.USplineMeshComponent>;
  
  /**
    Spline for this hand's laser pointer
  **/
  @:uproperty private var LaserSplineComponent : unreal.USplineComponent;
  
  /**
    Mesh for this hand
  **/
  @:uproperty private var HandMeshComponent : unreal.UStaticMeshComponent;
  
  /**
    Motion controller component which handles late-frame transform updates of all parented sub-components
  **/
  @:uproperty private var MotionControllerComponent : unreal.headmounteddisplay.UMotionControllerComponent;
  
}
