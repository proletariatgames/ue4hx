/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.landscape;

/**
  WARNING: This type was defined as MinimalAPI on its declaration. Because of that, its properties/methods are inaccessible
  
  
**/
@:umodule("Landscape")
@:glueCppIncludes("LandscapeSplineSegment.h")
@:uextern @:uclass extern class ULandscapeSplineSegment extends unreal.UObject {
  #if WITH_EDITORONLY_DATA
  
  /**
    Key for tracking whether this segment has been modified relative to the mesh components stored in other streaming levels
  **/
  @:uproperty private var ModificationKey : unreal.FGuid;
  #end // WITH_EDITORONLY_DATA
  
  /**
    Spline meshes
  **/
  @:uproperty private var LocalMeshComponents : unreal.TArray<unreal.USplineMeshComponent>;
  
  /**
    Bounds of points
  **/
  @:uproperty private var Bounds : unreal.FBox;
  
  /**
    Spline points
  **/
  @:uproperty private var Points : unreal.TArray<unreal.landscape.FLandscapeSplineInterpPoint>;
  
  /**
    Actual data for spline.
  **/
  @:uproperty private var SplineInfo : unreal.FInterpCurveVector;
  #if WITH_EDITORONLY_DATA
  
  /**
    Mesh Collision Settings
  **/
  @:uproperty public var BodyInstance(default,never) : unreal.FBodyInstance;
  
  /**
    Whether spline meshes should be placed in landscape proxy streaming levels (true) or the spline's level (false)
  **/
  @:uproperty public var bPlaceSplineMeshesInStreamingLevels : Bool;
  
  /**
    Whether to hide the mesh in game
  **/
  @:uproperty public var bHiddenInGame : Bool;
  
  /**
    Translucent objects with a lower sort priority draw behind objects with a higher priority.
    Translucent objects with the same priority are rendered from back-to-front based on their bounds origin.
    
    Ignored if the object is not translucent.  The default priority is zero.
    Warning: This should never be set to a non-default value unless you know what you are doing, as it will prevent the renderer from sorting correctly.
  **/
  @:uproperty public var TranslucencySortPriority : unreal.Int32;
  
  /**
    Max draw distance for all the mesh pieces used in this spline
  **/
  @:uproperty public var LDMaxDrawDistance : unreal.Float32;
  
  /**
    Random seed used for choosing which order to use spline meshes. Ignored if only one mesh is set.
  **/
  @:uproperty public var RandomSeed : unreal.Int32;
  
  /**
    Whether the Spline Meshes should cast a shadow.
  **/
  @:uproperty public var bCastShadow : Bool;
  
  /**
    Name of the collision profile to use for this spline //
    // TODO: This field does not have proper Slate customization.
    // Instead of a text field, this should be a dropdown with the
    // default option.
    //
  **/
  @:uproperty public var CollisionProfileName : unreal.FName;
  @:deprecated @:uproperty public var bEnableCollision_DEPRECATED : Bool;
  
  /**
    Spline meshes from this list are used in random order along the spline.
  **/
  @:uproperty public var SplineMeshes : unreal.TArray<unreal.landscape.FLandscapeSplineMeshEntry>;
  
  /**
    If the spline is below the terrain, whether to lower the terrain down to the level of the spline when applying it to the landscape.
  **/
  @:uproperty public var bLowerTerrain : Bool;
  
  /**
    If the spline is above the terrain, whether to raise the terrain up to the level of the spline when applying it to the landscape.
  **/
  @:uproperty public var bRaiseTerrain : Bool;
  
  /**
    Name of blend layer to paint when applying spline to landscape
    If "none", no layer is painted
  **/
  @:uproperty public var LayerName : unreal.FName;
  #end // WITH_EDITORONLY_DATA
  
}
