/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;

/**
  WARNING: This type was defined as MinimalAPI on its declaration. Because of that, its properties/methods are inaccessible
  
  
**/
@:glueCppIncludes("Materials/MaterialExpressionSphereMask.h")
@:uextern @:uclass extern class UMaterialExpressionSphereMask extends unreal.UMaterialExpression {
  
  /**
    in percent 0%=soft .. 100%=hard
  **/
  @:uproperty public var HardnessPercent : unreal.Float32;
  
  /**
    in the unit that A and B are measured
  **/
  @:uproperty public var AttenuationRadius : unreal.Float32;
  
  /**
    Defaults to 'HardnessPercent' if not specified
  **/
  @:uproperty public var Hardness : unreal.FExpressionInput;
  
  /**
    Defaults to 'AttenuationRadius' if not specified
  **/
  @:uproperty public var Radius : unreal.FExpressionInput;
  
  /**
    1 to 4 dimensional vector, should be the same type as A
  **/
  @:uproperty public var B : unreal.FExpressionInput;
  
  /**
    1 to 4 dimensional vector, should be the same type as B
  **/
  @:uproperty public var A : unreal.FExpressionInput;
  
}
