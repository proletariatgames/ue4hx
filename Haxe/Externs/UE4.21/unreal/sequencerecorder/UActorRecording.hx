/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.sequencerecorder;

/**
  WARNING: This type was defined as MinimalAPI on its declaration. Because of that, its properties/methods are inaccessible
  
  
**/
@:umodule("SequenceRecorder")
@:glueCppIncludes("ActorRecording.h")
@:uextern @:uclass extern class UActorRecording extends unreal.sequencerecorder.USequenceRecordingBase {
  
  /**
    Whether to record to 'possessable' (i.e. level-owned) or 'spawnable' (i.e. sequence-owned) actors. Defaults to the global setting.
  **/
  @:uproperty public var bRecordToPossessable : Bool;
  
  /**
    The settings to apply to this actor's animation
  **/
  @:uproperty public var AnimationSettings : unreal.FAnimationRecordingSettings;
  
  /**
    The target animation we want to record to
  **/
  @:uproperty public var TargetAnimation : unreal.UAnimSequence;
  
  /**
    Whether we should specify the target animation or auto-create it
  **/
  @:uproperty public var bSpecifyTargetAnimation : Bool;
  
  /**
    Specify the take number for the new recording
  **/
  @:uproperty public var TakeNumber : unreal.FakeUInt32;
  
  /**
    Optional target name to record to. If not specified, the actor label will be used
  **/
  @:uproperty public var TargetName : unreal.FText;
  
  /**
    The level sequence to record into
  **/
  @:uproperty public var TargetLevelSequence : unreal.levelsequence.ULevelSequence;
  
  /**
    Whether to create a level sequence for this actor recording
  **/
  @:uproperty public var bCreateLevelSequence : Bool;
  
  /**
    Whether this actor is active and to be recorded when the 'Record' button is pressed.
  **/
  @:uproperty public var bActive : Bool;
  @:uproperty public var ActorSettings : unreal.sequencerecorder.FActorRecordingSettings;
  
}
