/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;

/**
  WARNING: This type was defined as MinimalAPI on its declaration. Because of that, its properties/methods are inaccessible
  
  
**/
@:glueCppIncludes("Materials/MaterialExpressionSpeedTree.h")
@:uextern @:uclass extern class UMaterialExpressionSpeedTree extends unreal.UMaterialExpression {
  
  /**
    Support accurate velocities from wind. This will incur extra cost per vertex.
  **/
  @:uproperty public var bAccurateWindVelocities : Bool;
  
  /**
    The threshold for triangles to be removed from the bilboard mesh when not facing the camera (0 = none pass, 1 = all pass).
  **/
  @:uproperty public var BillboardThreshold : unreal.Float32;
  
  /**
    The type of LOD to use
  **/
  @:uproperty public var LODType : unreal.ESpeedTreeLODType;
  
  /**
    The type of wind effect used on this tree. This can only go as high as it was in the SpeedTree Modeler, but you can set it to a lower option for lower quality wind and faster rendering.
  **/
  @:uproperty public var WindType : unreal.ESpeedTreeWindType;
  
  /**
    The type of SpeedTree geometry on which this material will be used
  **/
  @:uproperty public var GeometryType : unreal.ESpeedTreeGeometryType;
  
  /**
    An extra bending of the tree for local effects
  **/
  @:uproperty public var ExtraBendWS : unreal.FExpressionInput;
  
  /**
    Defaults to 'LODType' if not specified
  **/
  @:uproperty public var LODInput : unreal.FExpressionInput;
  
  /**
    Defaults to 'GeometryType' if not specified
  **/
  @:uproperty public var WindInput : unreal.FExpressionInput;
  
  /**
    Defaults to 'WindType' if not specified
  **/
  @:uproperty public var GeometryInput : unreal.FExpressionInput;
  
}
